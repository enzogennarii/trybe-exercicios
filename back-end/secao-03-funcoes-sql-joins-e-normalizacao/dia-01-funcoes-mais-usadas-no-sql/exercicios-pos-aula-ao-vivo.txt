Exercícios pós aula ao vivo

Para restaurar o banco de dados usado nos exercícios à seguir:
https://lms-assets.betrybe.com/lms/hr.sql?_gl=1*16yr5az*_ga*NDA4MDI1NDA3LjE2NzY4NDk3NzQ.*_ga_JRYMZ1LMBF*MTY4ODczOTA2Ny4xNDUuMS4xNjg4NzM5MTIyLjUuMC4w

1. Escreva uma query que exiba o maior salário da tabela.
SOLUÇÃO:
SELECT MAX(salary) AS higher_salary FROM hr.employees;

2. Escreva uma query que exiba a diferença entre o maior e o menor salário.
SOLUÇÃO:
SELECT MAX(salary) - MIN(salary) diff_higher_to_lower_salary FROM hr.employees;

3. Escreva uma query que exiba a média salarial de cada job_id, ordenando pela média salarial em ordem decrescente.
SOLUÇÃO:
SELECT job_id, ROUND(AVG(salary), 2) AS average_salary FROM hr.employees
GROUP BY job_id
ORDER BY average_salary DESC;

4. Escreva uma query que exiba a quantidade de dinheiro necessária para realizar o pagamento de todas as pessoas funcionárias.
SOLUÇÃO:
SELECT SUM(salary) AS total_payment FROM hr.employees;

5. Escreva uma query que exiba quatro informações: o maior salário, o menor salário, a soma de todos os salários e a média dos salários. Todos os valores devem ser formatados para ter apenas duas casas decimais.
SOLUÇÃO:
SELECT
	MAX(salary) AS higher_salary,
    MIN(salary) AS lower_salary,
    SUM(salary) AS summation_salary,
    ROUND(AVG(salary), 2) AS average_salary
FROM hr.employees;

6. Escreva uma query que exiba a quantidade de pessoas que trabalham como pessoas programadoras (it_prog).
SOLUÇÃO:
SELECT job_id, COUNT(job_id) AS total FROM hr.employees
GROUP BY job_id
HAVING job_id = 'IT_PROG';

7. Escreva uma query que exiba a quantidade de dinheiro necessária para efetuar o pagamento de cada profissão (job_id).
SOLUÇÃO:
SELECT job_id, ROUND(SUM(salary), 2) AS total FROM hr.employees
GROUP BY job_id;

8. Utilizando a query anterior, faça as alterações para que seja exibido somente a quantidade de dinheiro necessária para cobrir a folha de pagamento das pessoas programadoras (it_prog).
SOLUÇÃO:
SELECT job_id, ROUND(SUM(salary), 2) AS total FROM hr.employees
GROUP BY job_id
HAVING job_id = 'IT_PROG';

9. Escreva uma query que exiba em ordem decrescente a média salarial de todos os cargos, exceto das pessoas programadoras (it_prog).
SOLUÇÃO:
SELECT job_id, ROUND(AVG(salary), 2) AS average_salary FROM hr.employees
GROUP BY job_id
HAVING job_id <> 'IT_PROG'
ORDER BY average_salary DESC;

10. Escreva um query que exiba média salarial e o número de funcionários de todos os departamentos com mais de dez funcionários. Dica: agrupe pelo department_id.
SOLUÇÃO:
SELECT
	department_id,
	ROUND(AVG(salary), 2) AS average_salary,
    COUNT(employee_id) AS num_employees
FROM hr.employees
GROUP BY department_id
HAVING num_employees > 10;

11. Escreva uma query que atualize a coluna phone_number, de modo que todos os telefones iniciados por 515 agora devem iniciar com 777.
SOLUÇÃO:
UPDATE hr.employees
SET phone_number = CONCAT('777', SUBSTRING(phone_number, 4))
WHERE LEFT(phone_number, 3) = '515';

12. Escreva uma query que só exiba as informações dos funcionários cujo o primeiro nome tenha oito ou mais caracteres.
SOLUÇÃO:
SELECT * FROM hr.employees
WHERE CHAR_LENGTH(first_name) >= 8;

13. Escreva uma query que exiba as seguintes informações de cada funcionário: id, primeiro nome e ano no qual foi contratado (exiba somente o ano).
SOLUÇÃO:
SELECT employee_id, first_name, YEAR(hire_date) AS hire_year
FROM hr.employees;

14. Escreva uma query que exiba as seguintes informações de cada funcionário: id, primeiro nome e dia do mês no qual foi contratado (exiba somente o dia).
SOLUÇÃO:
SELECT employee_id, first_name, DAY(hire_date) AS hire_day
FROM hr.employees;

15. Escreva uma query que exiba as seguintes informações de cada funcionário: id, primeiro nome e mês no qual foi contratado (exiba somente o mês).
SOLUÇÃO:
SELECT employee_id, first_name, MONTHNAME(hire_date) AS hire_month
FROM hr.employees;

16. Escreva uma query que exiba os nomes dos funcionários em letra maiúscula.
SOLUÇÃO:
SELECT UPPER(first_name) AS first_name FROM hr.employees;

17: Escreva uma query que exiba o sobrenome e a data de contratação de todos os funcionário contratados em julho de 1987.
SOLUÇÃO:
SELECT last_name, hire_date FROM hr.employees
WHERE hire_date LIKE '1987-07%';

18: Escreva uma query que exiba as seguintes informações de cada funcionário: nome, sobrenome, tempo que trabalha na empresa (em dias).
SOLUÇÃO:
SELECT
	first_name,
	last_name,
	DATEDIFF(CURDATE(),hire_date) AS time_on_department 
FROM hr.employees;
