Exerc√≠cios p√≥s aula ao vivo - Parte 1

Exerc√≠cio 1: üöÄ Um zool√≥gico precisa de um banco de dados para armazenar informa√ß√µes sobre os seus animais. As informa√ß√µes a serem armazenadas sobre cada animal s√£o:
- Nome;
- Esp√©cie;
- Sexo;
- Idade;
- Localiza√ß√£o.
* Cada animal tamb√©m possui v√°rios cuidadores, e cada cuidador pode ser respons√°vel por mais de um animal. Al√©m disso, cada cuidador possui um gerente, sendo que cada gerente pode ser respons√°vel por mais de um cuidador.

SOLU√á√ÉO:
-- Remove o banco, caso j√° exista
DROP DATABASE IF EXISTS zoologico;
-- Cria o banco
CREATE DATABASE zoologico;
-- Utiliza o banco
USE zoologico;

-- Cria a tabela de animais
CREATE TABLE animais (
    animal_id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    especie VARCHAR(50) NOT NULL,
    sexo VARCHAR(50) NOT NULL,
    idade INT NOT NULL,
    localizacao VARCHAR(50) NOT NULL
);

-- Cria a tabela de gerentes
CREATE TABLE gerentes (
    gerente_id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    sobrenome VARCHAR(50) NOT NULL
);

-- Cria a tabela de cuidadores, com a chave estrangeira que representa qual o gerente respons√°vel por cada um deles
CREATE TABLE cuidadores (
    cuidador_id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    sobrenome VARCHAR(50) NOT NULL,
    gerente_id INT NOT NULL,
    FOREIGN KEY (gerente_id) REFERENCES gerentes (gerente_id)
);

-- Cria a tabela intermedi√°ria de relacionamento entre animais e cuidadores
CREATE TABLE animal_cuidador (
    animal_id INT NOT NULL,
    cuidador_id INT NOT NULL,
    CONSTRAINT PRIMARY KEY (animal_id, cuidador_id),
    FOREIGN KEY (animal_id)
        REFERENCES animais (animal_id)
    FOREIGN KEY (cuidador_id)
        REFERENCES cuidadores (cuidador_id),
);
